(self.webpackChunkpcf_project=self.webpackChunkpcf_project||[]).push([[931],{"./stories/FluentUITagList.Demo.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppearanceFilled:()=>AppearanceFilled,AppearanceGhost:()=>AppearanceGhost,AppearanceOutline:()=>AppearanceOutline,AppearanceTint:()=>AppearanceTint,ColorBrand:()=>ColorBrand,ColorDanger:()=>ColorDanger,ColorImportant:()=>ColorImportant,ColorInformative:()=>ColorInformative,ColorSevere:()=>ColorSevere,ColorSubtle:()=>ColorSubtle,ColorSuccess:()=>ColorSuccess,ColorWarning:()=>ColorWarning,ShapeCircular:()=>ShapeCircular,ShapeRounded:()=>ShapeRounded,ShapeSquare:()=>ShapeSquare,SizeExtraLarge:()=>SizeExtraLarge,SizeLarge:()=>SizeLarge,SizeMedium:()=>SizeMedium,SizeSmall:()=>SizeSmall,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FluentUITagList_Demo_stories});var client=__webpack_require__("./node_modules/react-dom/client.js"),react=__webpack_require__("./node_modules/react/index.js"),FluentProvider=__webpack_require__("./node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js"),queryClient=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/queryClient.mjs"),queryCache=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/queryCache.mjs"),QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const PcfContextProvider=({pcfcontext,children})=>(0,jsx_runtime.jsx)(PcfContext.Provider,{value:pcfcontext,children});PcfContextProvider.displayName="PcfContextProvider";const PcfContext=(0,react.createContext)(void 0),usePcfContext=()=>(0,react.useContext)(PcfContext);try{PcfContextProvider.displayName="PcfContextProvider",PcfContextProvider.__docgenInfo={description:"",displayName:"PcfContextProvider",props:{pcfcontext:{defaultValue:null,description:"",name:"pcfcontext",required:!0,type:{name:"PcfContextService"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["FluentUITagList/services/PcfContext.tsx#PcfContextProvider"]={docgenInfo:PcfContextProvider.__docgenInfo,name:"PcfContextProvider",path:"FluentUITagList/services/PcfContext.tsx#PcfContextProvider"})}catch(__react_docgen_typescript_loader_error){}const useStyles=(0,__webpack_require__("./node_modules/@griffel/react/makeStyles.esm.js").Z)({tagStack:{display:"flex",flexWrap:"wrap",width:"fit-content",height:"fit-content",boxSizing:"border-box",verticalAlign:"middle","> *":{textOverflow:"ellipsis"},flexDirection:"row",marginBottom:"5px","> :not(:last-child)":{marginRight:"5px"}},tag:{marginTop:"2px",marginBottom:"2px"},link:{":hover":{textDecorationLine:"none"},":active":{textDecorationLine:"none"}}});var Badge=__webpack_require__("./node_modules/@fluentui/react-badge/lib/components/Badge/Badge.js"),Image=__webpack_require__("./node_modules/@fluentui/react-image/lib/components/Image/Image.js"),useQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useQuery.mjs");const useRecordImage=(entityType,id)=>{const pcfcontext=usePcfContext(),{primaryimage}=(entityname=>{const pcfcontext=usePcfContext(),{data,isLoading,isError}=(0,useQuery.a)(["metadata",entityname,pcfcontext.instanceid],(()=>pcfcontext.getEntityMetadata(entityname)),{enabled:null!=entityname&&""!==entityname,staleTime:1/0});return{metadata:data,primaryid:data?.PrimaryIdAttribute,primaryname:data?.PrimaryNameAttribute,primaryimage:data?.PrimaryImageAttribute,manytoonerelationships:data?.ManyToOneRelationships,onetomanyrelationships:data?.OneToManyRelationships,isLoading,isError}})(entityType),{data,isLoading,isError}=(0,useQuery.a)(["recordimage",pcfcontext.instanceid,id],(()=>pcfcontext.getRecordImage(entityType,id,primaryimage)),{enabled:!!primaryimage,staleTime:1/0});return{imagesrc:data,isLoading,isError}},components_TagImage=({id,name},key)=>{const pcfcontext=usePcfContext(),imgsize="small"===pcfcontext.size?14:"medium"===pcfcontext.size?16:"large"===pcfcontext.size?20:24,{imagesrc,isError,isLoading}=useRecordImage(pcfcontext.entityname,id);return isLoading||isError||!imagesrc||""===imagesrc?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}):(0,jsx_runtime.jsx)(Image.E,{alt:name+" image",shape:pcfcontext.imageshape,src:imagesrc,height:imgsize,width:imgsize},"tagimage-"+key)},Tag=({id,name},key)=>{const pcfcontext=usePcfContext(),styles=useStyles();return(0,jsx_runtime.jsx)(Badge.C,{className:styles.tag,shape:pcfcontext.shape,appearance:pcfcontext.appearance,color:pcfcontext.color,size:pcfcontext.size,icon:pcfcontext.showRecordImage?(0,jsx_runtime.jsx)(components_TagImage,{id,name}):void 0,children:name},`tag-${key}`)};Tag.displayName="Tag";const components_Tag=Tag;var Link=__webpack_require__("./node_modules/@fluentui/react-link/lib/components/Link/Link.js");const TagLink=({id,name},key)=>{const pcfcontext=usePcfContext(),styles=useStyles();return(0,jsx_runtime.jsx)(Link.r,{className:styles.link,appearance:"subtle",onClick:()=>{pcfcontext.openRecord(pcfcontext.entityname,id)},children:(0,jsx_runtime.jsx)(components_Tag,{id,name},key)},"taglink-"+key)};TagLink.displayName="TagLink";const components_TagLink=TagLink,TagList=()=>{const pcfcontext=usePcfContext(),styles=useStyles();return(0,jsx_runtime.jsx)("div",{className:styles.tagStack,children:pcfcontext.tagValues()?.map(((t,i)=>pcfcontext.openRecordOnClick?(0,jsx_runtime.jsx)(components_TagLink,{id:t.id,name:t.name},"tag-"+i):(0,jsx_runtime.jsx)(components_Tag,{id:t.id,name:t.name},"tag-"+i)))})};TagList.displayName="TagList";const components_TagList=TagList;var lightTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/teams/lightTheme.js"),darkTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/teams/darkTheme.js"),highContrastTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/teams/highContrastTheme.js"),web_lightTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/web/lightTheme.js"),web_darkTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/web/darkTheme.js");const themes={TeamsLight:lightTheme.Y,TeamsDark:darkTheme.$,TeamsHighContrast:highContrastTheme.$,WebLight:web_lightTheme.w,WebDark:web_darkTheme._};function getTheme(name){return themes[name]}try{getTheme.displayName="getTheme",getTheme.__docgenInfo={description:"",displayName:"getTheme",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["FluentUITagList/utils/theme.tsx#getTheme"]={docgenInfo:getTheme.__docgenInfo,name:"getTheme",path:"FluentUITagList/utils/theme.tsx#getTheme"})}catch(__react_docgen_typescript_loader_error){}class PcfContextService{constructor(props){props&&(this.instanceid=props.instanceid,this.entityname=props.context.parameters.tagsDataSet.getTargetEntityType(),this.context=props.context,this.dataset=props.context.parameters.tagsDataSet,this.showRecordImage="true"===props.context.parameters.showRecordImage.raw,this.openRecordOnClick="true"===props.context.parameters.openRecordOnClick.raw,this.theme=getTheme(props.context.parameters.theme.raw??"WebLight"),this.appearance=props.context.parameters.appearance.raw??"filled",this.size=props.context.parameters.size.raw??"medium",this.shape=props.context.parameters.shape.raw??"rounded",this.color=props.context.parameters.color.raw??"brand",this.imageshape=props.context.parameters.imageshape.raw??"rounded")}tagValues(){return this.dataset?.sortedRecordIds.map((recordId=>{let currentRecord=this.dataset?.records[recordId];return{id:recordId??"",name:currentRecord?.getFormattedValue("tagLabel")??""}}))??[]}async getEntityMetadata(entityname){return this.context.utils.getEntityMetadata(entityname)}async getRecordImage(entityType,id,primaryimage){let record=await this.context.webAPI.retrieveRecord(entityType,id,`?$select=${primaryimage}`);return record?.[primaryimage]?`data:image/jpeg;base64,${record?.[primaryimage]}`:""}async openRecord(entityName,entityId){return this.context.navigation.openForm({entityName,entityId})}}const TagListApp_queryClient=new queryClient.S({queryCache:new queryCache.t,defaultOptions:{queries:{refetchOnMount:!1,refetchOnWindowFocus:!1}}}),TagListApp=props=>{const pcfcontextservice=new PcfContextService(props);return(0,jsx_runtime.jsx)(QueryClientProvider.aH,{client:TagListApp_queryClient,contextSharing:!1,children:(0,jsx_runtime.jsx)(PcfContextProvider,{pcfcontext:pcfcontextservice,children:(0,jsx_runtime.jsx)(FluentProvider.r,{theme:pcfcontextservice.theme,children:(0,jsx_runtime.jsx)(components_TagList,{})})})})};TagListApp.displayName="TagListApp";const FluentUITagList_TagListApp=TagListApp;try{TagListApp.displayName="TagListApp",TagListApp.__docgenInfo={description:"",displayName:"TagListApp",props:{context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"Context<IInputs>"}},instanceid:{defaultValue:null,description:"",name:"instanceid",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["FluentUITagList/TagListApp.tsx#TagListApp"]={docgenInfo:TagListApp.__docgenInfo,name:"TagListApp",path:"FluentUITagList/TagListApp.tsx#TagListApp"})}catch(__react_docgen_typescript_loader_error){}const TagDummy=({id,name,shape,appearance,color,size},key)=>{const styles=useStyles();return(0,jsx_runtime.jsx)(Badge.C,{className:styles.tag,shape,appearance,color,size,children:name},`tag-${key}`)};TagDummy.displayName="TagDummy";const components_TagDummy=TagDummy,TagListDummy=props=>{const styles=useStyles();return(0,jsx_runtime.jsx)(FluentProvider.r,{theme:web_lightTheme.w,children:(0,jsx_runtime.jsx)("div",{className:styles.tagStack,children:[{id:"1",name:"Tag 1"},{id:"2",name:"Tag 2"},{id:"3",name:"Tag 3"}]?.map(((t,i)=>(0,jsx_runtime.jsx)(components_TagDummy,{id:t.id,name:t.name,shape:props.shape,appearance:props.appearance,color:props.color,size:props.size},"tag-"+i)))})})};TagListDummy.displayName="TagListDummy";const components_TagListDummy=TagListDummy;try{TagListDummy.displayName="TagListDummy",TagListDummy.__docgenInfo={description:"",displayName:"TagListDummy",props:{appearance:{defaultValue:null,description:"",name:"appearance",required:!0,type:{name:"enum",value:[{value:'"filled"'},{value:'"ghost"'},{value:'"outline"'},{value:'"tint"'}]}},shape:{defaultValue:null,description:"",name:"shape",required:!0,type:{name:"enum",value:[{value:'"circular"'},{value:'"rounded"'},{value:'"square"'}]}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"brand"'},{value:'"danger"'},{value:'"important"'},{value:'"informative"'},{value:'"severe"'},{value:'"subtle"'},{value:'"success"'},{value:'"warning"'}]}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"extra-large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["FluentUITagList/components/TagListDummy.tsx#TagListDummy"]={docgenInfo:TagListDummy.__docgenInfo,name:"TagListDummy",path:"FluentUITagList/components/TagListDummy.tsx#TagListDummy"})}catch(__react_docgen_typescript_loader_error){}class FluentUITagList{constructor(){}init(context,notifyOutputChanged,state,container){this._root=(0,client.createRoot)(container),"https://make.powerapps.com"===location.ancestorOrigins[0]&&(this._isDesignMode=!0),this._props={context,instanceid:Math.random()}}updateView(context){if(this._isDesignMode){const dummyProps={shape:context.parameters.shape.raw||"rounded",appearance:context.parameters.appearance.raw||"filled",color:context.parameters.color.raw||"blue",size:context.parameters.size.raw||"medium"};this._root.render((0,react.createElement)(components_TagListDummy,dummyProps))}else context.parameters.tagsDataSet.loading||(null!=context.parameters.tagsDataSet.paging&&1==context.parameters.tagsDataSet.paging.hasNextPage?(context.parameters.tagsDataSet.paging.setPageSize(5e3),context.parameters.tagsDataSet.paging.loadNextPage()):(this._props.context=context,this._root.render((0,react.createElement)(FluentUITagList_TagListApp,this._props))))}getOutputs(){return{}}destroy(){this._root.unmount()}}var esm=__webpack_require__("./node_modules/@shko.online/componentframework-mock/lib/esm/index.js"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api"),external_STORYBOOK_MODULE_ADDONS_=__webpack_require__("@storybook/addons");const FluentUITagList_Demo_stories={title:"PCF Component/FluentUITagList",decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{margin:"3em",maxWidth:"350px"},children:Story()})],parameters:{layout:"fullscreen"},argTypes:{appearance:{control:{type:"select",options:["filled","ghost","outline","tint"]}},shape:{control:{type:"select",options:["circular","rounded","square"]}},color:{control:{type:"select",options:["brand","danger","important","informative","severe","subtle","success","warning"]}},size:{control:{type:"select",options:["small","medium","large","extra-large"]}},theme:{control:{type:"select",options:["WebLight","WebDark","TeamsLight","TeamsDark","TeamsHighContrast"]}},imageshape:{control:{type:"select",options:["circular","rounded","square"]}}},args:{...{tagsDataSet:[{myId:"1",tagLabel:"item1"},{myId:"2",tagLabel:"item2"},{myId:"3",tagLabel:"item3"},{myId:"4",tagLabel:"item4"}],appearance:"filled",shape:"rounded",color:"brand",size:"medium",theme:"WebLight",showRecordImage:!0,openRecordOnClick:!1,imageshape:"rounded"}}},Template=({})=>{const container=(0,react.useRef)(null),[,setLoaded]=(0,react.useState)(!1),[args,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)(),mockGenerator=(0,external_STORYBOOK_MODULE_ADDONS_.useMemo)((()=>{if(null===container.current)return;const innerContainer=document.createElement("div");container.current.appendChild(innerContainer);const mockGenerator=new esm.tg(FluentUITagList,{tagsDataSet:esm.$7,showRecordImage:esm.UT,openRecordOnClick:esm.UT,appearance:esm.UT,size:esm.UT,shape:esm.UT,color:esm.UT,theme:esm.UT,imageshape:esm.UT},innerContainer);return mockGenerator.metadata.initMetadata([{EntitySetName:"contact",LogicalName:"contact",PrimaryIdAttribute:"myId",PrimaryNameAttribute:"tagLabel",PrimaryImageAttribute:"entityimage",Attributes:["myId","tagLabel","entityimage"].map((logicalName=>({EntityLogicalName:"contact",LogicalName:logicalName})))}]),mockGenerator.context._parameters.tagsDataSet._Bind("contact","tagsDataSet"),mockGenerator.context._parameters.tagsDataSet._InitItems(args.tagsDataSet),mockGenerator.context.webAPI.retrieveRecord.callsFake(((entityType,id,options)=>{if("contact"===entityType){var img="1"===id?{entityimage:"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"}:"2"===id?{entityimage:""}:{entityimage:""};return new Promise((resolve=>resolve(img)))}return new Promise(((_resolve,reject)=>{reject(new Error("invalid"))}))})),mockGenerator.context._SetCanvasItems({appearance:args.appearance||void 0,size:args.size||void 0,shape:args.shape||void 0,color:args.color||void 0,theme:args.theme||void 0,imageshape:args.imageshape||void 0}),mockGenerator.ExecuteInit(),mockGenerator}),[container.current]);return mockGenerator&&(mockGenerator.context._parameters.appearance._SetValue(args.appearance),mockGenerator.context._parameters.size._SetValue(args.size),mockGenerator.context._parameters.shape._SetValue(args.shape),mockGenerator.context._parameters.color._SetValue(args.color),mockGenerator.context._parameters.theme._SetValue(args.theme),mockGenerator.context._parameters.imageshape._SetValue(args.imageshape),mockGenerator.context._parameters.openRecordOnClick._SetValue(args.openRecordOnClick?"true":"false"),mockGenerator.context._parameters.showRecordImage._SetValue(args.showRecordImage?"true":"false"),mockGenerator.ExecuteUpdateView()),(0,react.useEffect)((()=>{setLoaded(!0)}),[container.current]),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("div",{ref:container})})};Template.displayName="Template";const SizeSmall=Template.bind({});SizeSmall.args={size:"small"};const SizeMedium=Template.bind({});SizeMedium.args={size:"medium"};const SizeLarge=Template.bind({});SizeLarge.args={size:"large"};const SizeExtraLarge=Template.bind({});SizeExtraLarge.args={size:"extra-large"};const AppearanceFilled=Template.bind({});AppearanceFilled.args={appearance:"filled"};const AppearanceGhost=Template.bind({});AppearanceGhost.args={appearance:"ghost"};const AppearanceOutline=Template.bind({});AppearanceOutline.args={appearance:"outline"};const AppearanceTint=Template.bind({});AppearanceTint.args={appearance:"tint"};const ShapeCircular=Template.bind({});ShapeCircular.args={shape:"circular"};const ShapeRounded=Template.bind({});ShapeRounded.args={shape:"rounded"};const ShapeSquare=Template.bind({});ShapeSquare.args={shape:"square"};const ColorBrand=Template.bind({});ColorBrand.args={color:"brand"};const ColorDanger=Template.bind({});ColorDanger.args={color:"danger"};const ColorImportant=Template.bind({});ColorImportant.args={color:"important"};const ColorInformative=Template.bind({});ColorInformative.args={color:"informative"};const ColorSevere=Template.bind({});ColorSevere.args={color:"severe"};const ColorSubtle=Template.bind({});ColorSubtle.args={color:"subtle"};const ColorSuccess=Template.bind({});ColorSuccess.args={color:"success"};const ColorWarning=Template.bind({});ColorWarning.args={color:"warning"},SizeSmall.parameters={...SizeSmall.parameters,docs:{...SizeSmall.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...SizeSmall.parameters?.docs?.source}}},SizeMedium.parameters={...SizeMedium.parameters,docs:{...SizeMedium.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...SizeMedium.parameters?.docs?.source}}},SizeLarge.parameters={...SizeLarge.parameters,docs:{...SizeLarge.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...SizeLarge.parameters?.docs?.source}}},SizeExtraLarge.parameters={...SizeExtraLarge.parameters,docs:{...SizeExtraLarge.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...SizeExtraLarge.parameters?.docs?.source}}},AppearanceFilled.parameters={...AppearanceFilled.parameters,docs:{...AppearanceFilled.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...AppearanceFilled.parameters?.docs?.source}}},AppearanceGhost.parameters={...AppearanceGhost.parameters,docs:{...AppearanceGhost.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...AppearanceGhost.parameters?.docs?.source}}},AppearanceOutline.parameters={...AppearanceOutline.parameters,docs:{...AppearanceOutline.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...AppearanceOutline.parameters?.docs?.source}}},AppearanceTint.parameters={...AppearanceTint.parameters,docs:{...AppearanceTint.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...AppearanceTint.parameters?.docs?.source}}},ShapeCircular.parameters={...ShapeCircular.parameters,docs:{...ShapeCircular.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ShapeCircular.parameters?.docs?.source}}},ShapeRounded.parameters={...ShapeRounded.parameters,docs:{...ShapeRounded.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ShapeRounded.parameters?.docs?.source}}},ShapeSquare.parameters={...ShapeSquare.parameters,docs:{...ShapeSquare.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ShapeSquare.parameters?.docs?.source}}},ColorBrand.parameters={...ColorBrand.parameters,docs:{...ColorBrand.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorBrand.parameters?.docs?.source}}},ColorDanger.parameters={...ColorDanger.parameters,docs:{...ColorDanger.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorDanger.parameters?.docs?.source}}},ColorImportant.parameters={...ColorImportant.parameters,docs:{...ColorImportant.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorImportant.parameters?.docs?.source}}},ColorInformative.parameters={...ColorInformative.parameters,docs:{...ColorInformative.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorInformative.parameters?.docs?.source}}},ColorSevere.parameters={...ColorSevere.parameters,docs:{...ColorSevere.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorSevere.parameters?.docs?.source}}},ColorSubtle.parameters={...ColorSubtle.parameters,docs:{...ColorSubtle.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorSubtle.parameters?.docs?.source}}},ColorSuccess.parameters={...ColorSuccess.parameters,docs:{...ColorSuccess.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorSuccess.parameters?.docs?.source}}},ColorWarning.parameters={...ColorWarning.parameters,docs:{...ColorWarning.parameters?.docs,source:{originalSource:"Template.bind({}) as StoryObj<StoryArgs>",...ColorWarning.parameters?.docs?.source}}};const __namedExportsOrder=["SizeSmall","SizeMedium","SizeLarge","SizeExtraLarge","AppearanceFilled","AppearanceGhost","AppearanceOutline","AppearanceTint","ShapeCircular","ShapeRounded","ShapeSquare","ColorBrand","ColorDanger","ColorImportant","ColorInformative","ColorSevere","ColorSubtle","ColorSuccess","ColorWarning"]},"?ef38":()=>{}}]);